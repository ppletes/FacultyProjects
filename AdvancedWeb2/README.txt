_zadaca_2_1

u pozadinskoj dretvi preuzimaju se u ciklusima s pravilnim intervalima podaci o polascima aviona (samo za one koji imaju određen aerodrom slijetanja) za izabrani skup aerodroma koje prate korisnici, zovemo iz vlastiti aerodromi (tablica MYAIRPORTS) putem REST servisa OpenSky (koristi se klasa OSKlijent iz biblioteke NWTiS_2020_REST_lib) i pohranjuju se u tablicu u bazi podataka (AIRPLANES). Dretva na početku preuzima iz konfiguracije podatak o početnom datumu polazaka aviona. Jedan aerodrom može se javiti u kolekcijama aerodroma više korisnika. Podaci za pojedini aerodrom trebaju se samo jednom preuzeti u pojedinom ciklusu dretve. Prije preuzimanja podataka za pojedini aerodrom potrebno je provjeriti u tablici MYAIRPORTSLOG ima li zapis tog aerodroma za datum koji se obrađuje u ciklusu dretve. Ako postoji onda se preskače aerodrom. Podaci o letovima pojedinog aerodroma preuzimaju se za cijeli dan datuma koji se obrađuje u ciklusu dretve. Nakon preuzimanja podataka za pojedini aerodrom potrebno je upisati u tablicu MYAIRPORTSLOG da je odrađeno preuzimanje za taj aerodroma i datum. Na kraju svakog ciklusa dretve datum se povećava za jedan dan. Interval dretve određen je postavkama, kao i vremenski razmak (pauza) između preuzimanja podataka za dva aerodroma u jednom ciklusu. Ako dretva stigne do važećeg datuma tada pauzira jedan dan.
2. pruža JAX-WS (SOAP) web servis za podatke o korisnicima, aerodromina i avionima za spremljene aerodrome. Operacije se temelje na podacima koji se nalaze u tablicama KORISNICI, AIRPORTS, MYAIRPORTS, MYAIRPORTSLOG i AIRPLANES u bazi podataka te na pozivu metoda klasa iz NWTiS_2020_REST_lib. Ako nije navedeno tada se podaci preuzimaju iz baze podazaka. Potrebno se držati zadanih osobina i realizirati sljedeće operacije:
1. sve operacije (osim kod dodavanja novog korisnika) moraju kod slanja zahtjeva pripremiti potrebne podatke za autentikaciju (šalje se korisničko ime, lozinka kao prva dva parametra), vraća Boolean. Tako sve operacija imaju barem ta dva parametra, Kod onih operacija koje imaju dodatne parametre to piše.
2. provjerava korisničke podatke za autentikaciju, vraća Boolean
3. dodaje novog korisnika (šalje Korisnik), vraća Boolean. Podaci za datumKreiranja i datumPromjene nemaju ulogu te se ignoriraju. Ostali podaci u objektu Korisnik ne smiju biti null ili prazni.
4. ažurira korisničke podatke (šalje Korisnik), vraća Boolean. Ako je lozinka u objektu Korisnik null ili je prazna, tada se ona ne mijenja. Korisničko ime u objektu mora odgovarati parametru za korisničko ime. Podaci za datumKreiranja i datumPromjene nemaju ulogu te se ignoriraju. Ostali podaci u objektu Korisnik ne smiju biti null ili prazni. – neobavezni dio, za više bodova ako postoji registracija i ažuriranje korisnika u trećem projektu
5. vraća popis svih korisnika, vraća java.util.List<Korisnik>. Kod lozinke se stavlja“******“ zbog privatnosti i sigurnosti. Ako nema ni jednog korisnika vraća null. – neobavezni dio, za više bodova
6. vraća popis svih korisnika koji imaju vlastite aerodrome, vraća java.util.List<Korisnik>. Ako nema ni jednog korisnika vraća null. – neobavezni dio, za više bodova
7. vraća popis aerodroma koji imaju sličan naziv koji se traži (šalje naziv), vraća java.util.List<Aerodrom>. Ako nema ni jednog aerodroma vraća null.
8. vraća popis aerodroma koji su iz određene države (šalje kod države), vraća java.util.List<Aerodrom>. Ako nema ni jednog aerodroma vraća null.
9. vraća popis svih vlastitih aerodroma, vraća java.util.List<Aerodrom>. Ako nema ni jednog aerodroma vraća null.
10. provjerava da li je aerodrom u njegovoj kolekciji aerodroma koje prati, vraća Boolean (šalje ICAO kod)
11. vraća traženi aerodrom iz vlastitih aerodroma, vraća Aerodrom (šalje se ICAO kod). Ako nema aerodroma vraća null.
12. dodaje aerodrom u vlastite aerodrome (šalje se ICAO kod), vraća Boolean. Mora postojati aerodrom u tablici AIRPORTS s tim kodom (ICAO = ident).
13. vraća popis svih aviona koji su polijetali sa zadanog aerodroma u određenom razdoblju (šalje se ICAO kod, od, do). Od i do su UNIX timestamp, vraća java.util.List<AvionLeti>. Ako nema ni jednog aviona vraća null.
14. vraća najveću visinu leta odabranog aviona i njenu geo lokaciju (šalje se ICAO24 kod, vrijeme) kao UNIX timestamp, vraća LetPozicija. Ako nema ni jedne pozicije leta aviona vraća null. Podaci svih pozicija leta preuzimaju se od web servisa Open Sky Network putem klase OSKlijent i njegove metode getTracks(...). Potrebno je pronaći koja od njih ima najveću vrijednost te se ona vraća. – neobavezni dio, za više bodova ako se koristi u trećem projektu


_zadaca_2_2

1. sve operacije JAX-RS (RESTful) web servisa moraju kod slanja zahtjeva pripremiti podatke za autentikaciju u atribute zaglavlja pod nazivima „korisnik“ i „lozinka“.
2. sve operacije JAX-RS web servisa koje trebaju dodatne ulazne podatke (osim putem zaglavlja i parametara u adresi) šalju ih u application/json formatu sa strukturom koja je zadana kod pojedine operacije.
3. sve operacije JAX-RS web servisa vraćaju odgovor u application/json formatu sa sljedećom strukturom odgovora: o ako je operacija u redu, atribut odgovor sadrži niz elemeneta.. Taj niz može biti prazan, može imati jedan ili više elemenata. Struktura elementa ovisi o pojedinoj operaciji. Tako neke vraćaju niz objekata jedne klase, neke objekt treće klase i sl. {"odgovor": [{...},{...}...], "status": "10", "poruka": "OK"} o ako operacija nije u redu, atribut odgovor sadrži prazan niz elemeneta. {"odgovor": [], "status": "40", "poruka": "tekst poruke"}.
4. GET metoda - osnovna adresa - vraća popis vlastitih aerodroma, a za aerodrom podaci trebaju odgovarati atributima klase Aerodrom. Poziva operaciju JAX-WS web servisa iz prvog projekta.
5. POST metoda - osnovna adresa - dodaje aerodrom korisniku koji je pozvao operaciju (šalje se ICAO kod). Šalje se {"icao": "icao kod"}. Poziva operaciju JAX-WS web servisa iz prvog projekta.
6. GET metoda - putanja "/svi" – uz parametre naziv i drzava, vraća popis svih aerodroma koji imaju naziv koji sliči nazivu iz parametra ili su iz države. Ako je upisan naziv tada se po njemu pretražuje. Ako je upisana samo država tada se po njoj pretražuje. Ako nije upisan ni jedan parametar tada se uzimaju svi aerodromi na bazi naziva "%". Za aerodrom podaci trebaju odgovarati atributima klase Aerodrom. Poziva potrebnu operaciju JAX-WS web servisa iz prvog projekta.
7. GET metoda - putanja "{icao}" - vraća podatke izabranog aerodroma ako je pridružen korisniku koji je pozvao operaciju. Podaci aerodroma trebaju odgovarati atributima klase Aerodrom. Poziva operaciju JAX-WS web servisa iz prvog projekta.
8. PUT, POST i DELETE metode - osnovna adresa, na bazi putanja - nije dozvoljeno pozivati ako nisu prethodno spomenute. Vraća pogrešku. 


_zadaca_2_3

1. korisnički dio treba biti podržan za više jezika (hr, en, de ili koji treći) uz odabir važećeg jezika u posebnom pogledu (p1) – neobavezni dio, za više bodova
2. korisnički dio treba biti podržan zajedničkim predloškom (izbornik, sadržaj) – neobavezni dio, za više bodova
3. korisnički dio (osim prijavljivanja i registracije korisnika) treba biti otvoren samo za prijavljene korisnika. Koristi se filter za ograničavanje pristupa. Filter – neobavezni dio, za više bodova
4. u korisničkom dijelu potrebno je imati pogled (p2) za registraciju korisnika. Poziva se operacija JAX-WS web servisa iz prvog projekta. – neobavezni dio, za više bodova
5. u korisničkom dijelu potrebno je imati pogled (p3) za prijavljivanje korisnika. Poziva se operacija JAX-WS web servisa iz prvog projekta.
6. u korisničkom dijelu potrebno je imati pogled (p4) za dodavanje aerodroma u vlastitu kolekciju. Moguća su dva načina selekcije aerodroma:
1. unese se naziv aerodroma, (min 3 znaka) zatim se putem gumba "Preuzmi aerodrome prema nazivu" pokreće akcija koja preuzima podatke o aerodromima koji imaju sličan naziv. Poziva se operacija JAX-RS web servisa iz drugog projekta.
2. unese se kod države (min 2 znaka) zatim se putem gumba " Preuzmi aerodrome iz države" pokreće akcija koja preuzima podatke o aerodromima iz upisane države.. Poziva se operacija JAX-RS web servisa iz drugog projekta. Zatim se pozove operacija JAX-RS web servisa iz drugog projekta za dohvat vlastitih aerodroma. Iz prve kolekcije aerodroma treba obrisati aerodrome koji se nalaze u kolekciji vlastitih aerodroma tako da ostanu aerodromi koji se mogu dodati. Dobiveni podaci prikazuju se o obliku padajućeg izbornika sa 7 vidljivih elemenata. Slijedi pokretanje akcije putem gumba "Dodaj aerodrom" kojom se odabrani aerodrom dodaje u vlastitu kolekciju aerodroma. Poziva se operacija JAX-RS web servisa iz drugog projekta. Može se umjesto padajućeg izbornika koristiti tablica aerodroma u kojoj svaki redak ima gumb za dodavanje.
7. u korisničkom dijelu potrebno je imati za pogled (p5) koji ima tri dijela. Gornji dio čini blok element koji zauzima 15% visine ekrana i u kojem se nalazi unos intervala vremena (od i do) u standardnom hrvatskom 24 satnom obliku dd.mm.gggg hh:mm. Potrebno ih je kasnije pretvoriti u UNIX timestamp. Srednji dio je blok element koji zauzima 60% visine ekrana i prikazuje aerodrome iz vlastite kolekcije u obliku tablice. Ukoliko je tablica veća od predviđenog prostora tada se kd blok elementa pojavljuje okomiti klizač kako bi se mogla vidjeti cijela tablica. Tablica prikazuje ICAO, naziv, državu te dva gumba. Prvi gumb služi za pokretanje akcije za prikaz aviona koji su poletjeli s izabranog aerodroma u traženom intervalu. Podaci se prikazuju u pogledu koji se otvara u novoj kartici u pregledniku. Drugi gumb služi za pokretanje akcije za preuzimanje geolokacijskih i meteo podataka izabranog aerodroma. U donjem dijelu je blok element koji zauzima preostalu visinu ekrana. U njemu  se nalazi prostor za usporedni prikaz geolokacijskih (iz baze podataka i od web servisa, klasa LIQKlijent, na bazi naziva aerodroma) i meteoroloških podataka izabranog aerodroma (web servis, klasa OWMKlijent).
8. u korisničkom dijelu potrebno je imati za pogled (p6) koji prikazuje tablicu s avionima koji su poletjeli s odabranog aerodroma unutar upisanog intervala. Prikazuju se podaci icao24, callsign, prvo i zadnje vrijeme (standardni hrvatski 24 satni oblik), polazni i odredišni aerodrom, gumb za pokretanje akcije za prikaz najveće visina leta i njene geo lokacije. Poziva se operacija JAX-WS web servisa iz prvog projekta. Za vrijeme uzima se srednje vrijeme između prvog i zadnjeg vremena. Podaci se prikazuju ispod tablice. Dio s gumbom za prikaz najveće visine leta – neobavezni dio, za više bodova.
